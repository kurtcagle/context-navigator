'use strict';
declareUpdate();
xdmp.setResponseContentType("text/html");

// Start of SEO - this will be replaced with a function class.
var sem = require("/MarkLogic/semantics.xqy");
var NS = require("/lib/ns.js");
var ns = new NS();
let context = xdmp.getRequestField("context","article:_AIApplicationsInEducation")
let path= `http://cognitiveworlds.com:8020/lib/server.sjs?context=${context}`
let doc = JSON.parse(Array.from(xdmp.httpGet(path))[1]);
let graph = doc.graph;
let cg = graph[context];
let template = (graph,context,cg)=>`{
    "@context": {
        "@vocab": "http://schema.org",
        "person": "http://semanticalllc.com/ns/person/",
        "company": "http://semanticalllc.com/ns/company/",
        "article": "http://semanticalllc.com/ns/article/",
        "magazine": "http://semanticalllc.com/ns/magazine/",
        "xsd": "http://www.w3.org/2001/XMLSchema"
    },
    "@type": "Article",
    "@id": "${context}",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "http://cognitiveworlds.com/?context=${context}"
    },
    "author": 
        ${cg['document:hasAuthor'].map((authorNode)=>authorNode.value).map((author)=>
        `{"@type": "Person",
        "name": "${graph[author]['term:prefLabel'][0].value}",
        "@id": "${author}",
        "url": "http://cognitiveworlds.com/?context=person:_${author}"}`)}
    ,
    "headline": "${cg['term:prefLabel'][0].value}",
    "datePublished": "${cg['term:hasCreatedDate'][0].value}",
    "dateModified": "${cg['term:hasLastModifiedDate'][0].value}",
    "url": "http://cognitiveworlds.com/?context=${context}",
    "publisher": {
        "@type": "Organization",
        "name": "Cognitive World",
        "@id": "company:_CognitiveWorld",
        "url": "http://cognitiveworlds.com/?context=company:_CognitiveWorld",
        "logo": {
            "@type": "ImageObject",
            "url": "http://cognitiveworlds.com/images/logo.jpg"
        }
    },
    "publication": 
      ${cg['article:hasMagazine'].map((magazineNode)=>magazineNode.value).map((magazine)=>
        `{"@type": "PublicationEvent",
        "name": "${graph[magazine]['term:prefLabel'][0].value}",
        "@id": "${magazine}",
        "url": "${graph[magazine]['term:hasPrimaryImageURL'][0].value}"
        }`)},
    "image": {
    "@type": "ImageObject",
    "url": "${cg['term:hasPrimaryImageURL'][0].value}"
    }
}`;
template(graph,context,cg)
// End of SEO


`<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8"/>
    <title>Navigator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--<script src="//cdn.jsdelivr.net/npm/pouchdb@7.1.1/dist/pouchdb.min.js"></script>
	<script>
	  var db = new PouchDB('my_database');
	</script>-->
  
  </head>

  <body aurelia-app="main">
    <script src="scripts/vendor-bundle.js" data-main="aurelia-bootstrapper"></script>
  </body>

</html>`
